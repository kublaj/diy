"use strict"; 

debug = require('debug')('backends/make')
moment = require('moment')


_module = ->

    printHeader = (options) ->
        """
        # Makefile autogenerated by Dyi on #{moment().format('YYYY, MMM DD')} 
        # Original configuration: {position}
        #
        # Main target: #{options.default-goal}
        # 
        #    - {t1} 
        #    - {t2}

        .DEFAULT_GOAL := #{options.default-goal}

        """

    printPhonyTarget = (name, names) ->
            """ 
            .PHONY: #{name}
            #{name}: #{names * ' '}

             
            """

    printPhonySeqTarget = (name, names, actions) ->
            """ 
            .PHONY: #{name}
            #{name}: 
            #{['\tmake '+n for n in names ] * '\n'}#{['\t'+a for a in actions ] * '\n'}

            
            """

    printTarget = (name, deps, command) ->
            """
            #{name}: #{deps}
            \t#{command}


            """

    iface = { 
        transcript: (f, options) ->

            options ?= {}
            options.default-goal ?= 'all'

            final = printHeader(options) 

            for k in f.getPhonyTargetNames!
                if not f.isPhonyTargetSequential(k)
                    final = final + (printPhonyTarget(k, f.getTargetDepsAsNames(k)))
                else 
                    final = final + (printPhonySeqTarget(k, f.getTargetDepsAsNames(k), f.getPhonyTargetActions(k))) 


            for k in f.getActualTargetNames!
                final = final + printTarget(k, f.getTargetDepsAsNames(k), f.getTargetCreationCommand(k))

            console.log final

    }
  
    return iface
 
module.exports = _module()

